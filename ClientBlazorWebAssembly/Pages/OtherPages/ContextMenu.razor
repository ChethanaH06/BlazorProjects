@if (IsVisible)
{
    <div class="modal" tabindex="-1" style="display: block;">
        <div class="modal-dialog" style="width: 200px; margin-top:100px">
            <div class="modal-content">
                <div class="modal-header">
                    <h6 class="modal-title">Employee Menu</h6>
                    <button type="button" class="btn-close" aria-label="Close" @onclick="CloseContextMenu"></button>
                </div>
                <div class="modal-body">
                    <div class="hstack gap-1 mb-1" id="cursorStyle" @onclick="ViewClicked">
                        <i class="bi bi-eye text-info"></i>
                        <span class="text-info">View</span>
                    </div>
                    <div class="hstack gap-1 mb-1" id="cursorStyle" @onclick="EditClicked">
                        <i class="bi bi-pencil text-primary"></i>
                        <span class="text-primary">Edit</span>
                    </div>
                    <div class="hstack gap-1 mb-1" id="cursorStyle" @onclick="DeleteClicked">
                        <i class="bi bi-trash text-danger"></i>
                        <span class="text-danger">Delete</span>
                    </div>
                    <hr />
                    <div class="hstack gap-1 mb-1" id="cursorStyle" @onclick="AddVacationClicked">
                        <i class="bi bi-backpack3 text-success"></i>
                        <span class="text-success">Add Vacation</span>
                    </div>
                    <div class="hstack gap-1 mb-1" id="cursorStyle" @onclick="AddOvertimeClicked">
                        <i class="bi bi-stopwatch text-danger"></i>
                        <span class="text-danger">Add Overtime</span>
                    </div>
                    <div class="hstack gap-1 mb-1" id="cursorStyle" @onclick="AddHealthClicked">
                        <i class="bi bi-hospital text-warning"></i>
                        <span class="text-warning">Add Health</span>
                    </div>
                    <div class="hstack gap-1 mb-2" id="cursorStyle" @onclick="AddSanctionClicked">
                        <i class="bi bi-x-octagon text-info"></i>
                        <span class="text-info">Add Sanction</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<style>
    #cursorStyle {
        cursor: pointer;
    }

    .modal {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
        padding-top: 10px;
    }

    .modal-dialog {
        background-color: white;
        border-radius: 5px;
        
    }
</style>

@code {
    private bool IsVisible { get; set; } = false;

    [Parameter] public EventCallback HandleViewClicked { get; set; }
    private async Task ViewClicked() => await HandleViewClicked.InvokeAsync();

    [Parameter] public EventCallback HandleEditClicked { get; set; }
    private async Task EditClicked() => await HandleEditClicked.InvokeAsync();

    [Parameter] public EventCallback HandleDeleteClicked { get; set; }
    private async Task DeleteClicked() => await HandleDeleteClicked.InvokeAsync();

    [Parameter] public EventCallback HandleAddVacationClicked { get; set; }
    private async Task AddVacationClicked() => await HandleAddVacationClicked.InvokeAsync();

    [Parameter] public EventCallback HandleAddHealthClicked { get; set; }
    private async Task AddHealthClicked() => await HandleAddHealthClicked.InvokeAsync();

    [Parameter] public EventCallback HandleAddOvertimeClicked { get; set; }
    private async Task AddOvertimeClicked() => await HandleAddOvertimeClicked.InvokeAsync();

    [Parameter] public EventCallback HandleAddSanctionClicked { get; set; }
    private async Task AddSanctionClicked() => await HandleAddSanctionClicked.InvokeAsync();

    public void OpenContextMenu()
    {
        IsVisible = true;
        StateHasChanged();
    }

    public void CloseContextMenu()
    {
        IsVisible = false;
        StateHasChanged();
    }
}
